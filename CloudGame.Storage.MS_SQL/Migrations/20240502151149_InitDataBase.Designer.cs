// <auto-generated />
using System;
using CloudGame.Storage.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CloudGame.Storage.MS_SQL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240502151149_InitDataBase")]
    partial class InitDataBase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CloudGame.Storage.Models.Owner", b =>
                {
                    b.Property<Guid>("IsnNode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataRegistration")
                        .HasMaxLength(255)
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOwn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IsnNode");

                    b.HasIndex("NameOwn");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("CloudGame.Storage.Models.Server", b =>
                {
                    b.Property<Guid>("IsnNode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Games")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("IsnOwner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameServer")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Сharacteristic")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IsnNode");

                    b.HasIndex("IsnOwner");

                    b.HasIndex("NameServer", "IsnOwner");

                    b.ToTable("Server");
                });

            modelBuilder.Entity("CloudGame.Storage.Models.User", b =>
                {
                    b.Property<Guid>("IsnNode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameUser")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Tariff")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IsnNode");

                    b.HasIndex("NameUser");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CloudGame.Storage.Models.User_Server", b =>
                {
                    b.Property<Guid>("IsnServer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IsnUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IsnServer", "IsnUser");

                    b.HasIndex("IsnUser");

                    b.HasIndex("IsnServer", "IsnUser");

                    b.ToTable("User_Server");
                });

            modelBuilder.Entity("CloudGame.Storage.Models.Server", b =>
                {
                    b.HasOne("CloudGame.Storage.Models.Owner", "Owner")
                        .WithMany("Servers")
                        .HasForeignKey("IsnOwner")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("CloudGame.Storage.Models.User_Server", b =>
                {
                    b.HasOne("CloudGame.Storage.Models.Server", "Server")
                        .WithMany("ServerUser")
                        .HasForeignKey("IsnServer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CloudGame.Storage.Models.User", "User")
                        .WithMany("UserServer")
                        .HasForeignKey("IsnUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Server");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CloudGame.Storage.Models.Owner", b =>
                {
                    b.Navigation("Servers");
                });

            modelBuilder.Entity("CloudGame.Storage.Models.Server", b =>
                {
                    b.Navigation("ServerUser");
                });

            modelBuilder.Entity("CloudGame.Storage.Models.User", b =>
                {
                    b.Navigation("UserServer");
                });
#pragma warning restore 612, 618
        }
    }
}
